version: '3.8'

services:
  capcut-api:
    build: .
    container_name: capcut-api
    ports:
      - "9000:9000"
    volumes:
      - ./tmp:/app/tmp
      - ./template:/app/template
      - ./template_jianying:/app/template_jianying
      - ./drafts:/app/drafts
    env_file:
      - .env
    environment:
      - FLASK_ENV=production
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    depends_on:
      - minio
    networks:
      - capcut-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MinIO服务用于对象存储
  minio:
    image: minio/minio:latest
    container_name: capcut-minio
    ports:
      - "9001:9000"  # API端口
      - "9002:9002"  # 控制台端口
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9002"
    restart: unless-stopped
    networks:
      - capcut-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 40s

volumes:
  minio_data:
    driver: local

networks:
  capcut-network:
    driver: bridge